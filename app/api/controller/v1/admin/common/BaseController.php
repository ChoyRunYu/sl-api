<?php
namespace app\api\controller\v1\admin\common;
use app\api\service\admin\UserService;
use think\Controller;
use think\Request;
use app\api\service\admin\AuthorizationService;
use think\Response;
use think\exception\HttpResponseException;

class BaseController extends Controller
{
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->checkLoginStatus();//调用检验登录状态函数
        $this->checkUrlAuth();//检验访问url权限
    }

    /**
     * 功能：检验登录状态
     */
    public function checkLoginStatus(){
        $request = Request::instance();
        $token = $request->header('Authorization');
        if(!$token){//未携带token访问
            $this->returnError(401,'未登录，没有权限访问!');
        }else {
            $authorization = new AuthorizationService();
            $jwt = $authorization->checkToken($token);
            if ($jwt['code'] == 103) {//携带token访问但token已过期
                $this->returnError(401, 'token过期，请重新登录');
            } else if ($jwt['code'] != 200) {//携带错误token访问
                $this->returnError(401, 'token错误，请重新登录');
            }
        }
    }

    //模块/控制器/方法
    //只能超级管理员访问的目录列表
    private $adminUrl = [
        'api/v1.admin.user/getuser'
    ];
    //部长可以访问的列表
    private $ministerUrl = [
        'api/v1.admin.user/checkcode'
    ];

    /**
     * 功能：判断用户是否有权限访问url
     */
    public function checkUrlAuth(){
        $request = Request::instance();
        $authorization = new AuthorizationService();
        $token = $request->header('Authorization');//获取token
        $jwt = $authorization->checkToken($token);//解析token中的数据
        $role = $jwt['data']['data'][0]->role;//获取token中的role
        $url = $this->getUrl();//获取访问的url
        //干事权限
        if($role == 'secretary'){
            //如果干事访问的url在管理员以及部长的列表中，返回无权限
            if(in_array($url, $this->adminUrl) || in_array($url, $this->ministerUrl)){
                $this->returnError(403, '没有访问权限');
            }
        }else if($role == 'minister'){//部长权限
            //如果部长访问的url在管理员列表中，返回无权限
            if(in_array($url, $this->adminUrl)){
                $this->returnError(403, '没有访问权限');
            }
        }
    }

    /**
     * 功能：获取用户访问的url
     * @return string
     */
    public function getUrl(){
        $request = Request::instance();
        $module = $request->module();//获取模块名
        $controller = $request->controller();//获取控制器名
        $action = $request->action();//获取方法名
        $url = $module.'/'.$controller.'/'.$action;
        return strtolower($url);//转换小写
    }

    private function returnError($code = 0, $msg = ''){
        $res = [
            'code'  => $code,
            'msg'   => $msg
        ];
        $response = Response::create($res, 'json')->header([]);
        throw new HttpResponseException($response);
    }
}